source('corr.R')
cr <- corr('specdata')
q
cr <- corr('specdata')
source('pollutantmean.R')
pollutantmean('specdata', 'sulfate', 1:10)
source('pollutantmean.R')
pollutantmean('specdata', 'sulfate', 1:10)
source('pollutantmean.R')
pollutantmean('specdata', 'sulfate', 1:10)
source('complete.R')
obs <- complete(directory, id)
obs <- complete('specdata', 1:10)
obs
obs <- complete('specdata', 1:10)$nobs
obs
source('pollutantmean.R')
pollutantmean('specdata', 'sulfate', 1:10)
source('pollutantmean.R')
pollutantmean('specdata', 'sulfate', 1:10)
pollutantmean('specdata', 'nitrate')
dataset <- lapply(id, function(x) {read.csv(file=file.path(directory, paste(sprintf("%03.f", x), "csv", sep='.')), header=TRUE)})
id <- 1:332
dataset <- lapply(id, function(x) {read.csv(file=file.path(directory, paste(sprintf("%03.f", x), "csv", sep='.')), header=TRUE)})
directory <- 'specdata'
dataset <- lapply(id, function(x) {read.csv(file=file.path(directory, paste(sprintf("%03.f", x), "csv", sep='.')), header=TRUE)})
obs <- complete(directory, id)$nobs
f <- function(x) {
mean(x[[pollutant]], na.rm = TRUE)
}
means <- sapply(dataset, f)
pollutant <- 'nitrate'
means <- sapply(dataset, f)
sumproduct <- sum(means * obs)
sumproduct <- sum(means * obs, na.rm = T)
source('pollutantmean.R')
pollutantmeat('specdata', 'sulfate', 1:10)
pollutantmean('specdata', 'sulfate', 1:10)
pollutantmean('specdata', 'sulfate')
pollutantmean('specdata', 'nitrate')
cc <- complete('specdata', c(6, 10, 20, 34, 100, 200, 310))
print (cc$nobs)
obs
sum(obs)
means
means[is.na(means)]
length(means[is.na(means)])
length(obs[obs==0])
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
c <- function(x) {
length(x[!is.na(x[[pollutant]]), ]$ID)
}
c(dataset[[1]])
c(dataset[[2]])
c(dataset[1:10)
c(dataset[1:10])
c(dataset[[1:10]])
c(dataset[[1]])
c(dataset[[2]])
c(dataset[[3]])
c(dataset[[4]])
c(dataset[[5]])
c(dataset[[6]])
c(dataset[[7]])
dataset[[1]]
view(dataset[1])
View(cc)
View(dataset[1])
m <- dataset[1]$nitrate
m
m <- dataset[[1]]$nitrate
m
length(!is.na(m))
length(m[!is.na(m)])
c(dataset[1])
c(dataset[[1]])
source('pollutantmean.R')
pollutantmean('specdata', 'nitrate', 1:10)
pollutantmean('specdata', 'sulfate', 1:10)
mean(dataset[[1]]$nitrate)
dataset <- lapply(id, function(x) {read.csv(file=file.path(directory, paste(sprintf("%03.f", x), "csv", sep='.')), header=TRUE)})
id <- 1:10
directory <- 'specdata'
dataset <- lapply(id, function(x) {read.csv(file=file.path(directory, paste(sprintf("%03.f", x), "csv", sep='.')), header=TRUE)})
mean(dataset[[1]]$nitrate)
mean(dataset[[1]]$nitrate, rm.na = T)
mean(dataset[[1]]$nitrate, na.rm  = T)
mean(dataset[[1]]$sulfate, na.rm  = T)
mean(dataset[[34]]$sulfate, na.rm  = T)
id <- 1:35
dataset <- lapply(id, function(x) {read.csv(file=file.path(directory, paste(sprintf("%03.f", x), "csv", sep='.')), header=TRUE)})
mean(dataset[[34]]$sulfate, na.rm  = T)
obs <- sapply(id, c)
obs[34]
c <- function(x) {
length(x[!is.na(x[[pollutant]]), ]$ID)
}
obs[34]
obs <- sapply(id, c)
pollutant <- 'sulfate'
obs <- sapply(id, c)
obs <- sapply(dataset, c)
source('pollutantmean.R')
pollutantmean('specdata', 'sulfate', 1:10)
pollutantmean('specdata', 'nitrate', 70:72)
id <- 70:72
pollutant <- 'nitrate'
dataset <- lapply(id, function(x) {read.csv(file=file.path(directory, paste(sprintf("%03.f", x), "csv", sep='.')), header=TRUE)})
obs <- sapply(dataset, c)
f <- function(x) {
mean(x[[pollutant]], na.rm = TRUE)
}
means <- sapply(dataset, f)
means * obs
obs
means
sum(means * obs)
sum(obs)
1610.509 / 944
pollutantmean('specdata', 'nitrate', 70:72)
source('pollutantmean.R')
pollutantmean('specdata', 'nitrate', 70:72)
id <- 70:72
pollutant <- 'nitrate'
directory <- 'specdata'
dataset <- lapply(id, function(x) {read.csv(file=file.path(directory, paste(sprintf("%03.f", x), "csv", sep='.')), header=TRUE)})
c <- function(x) {
length(x[!is.na(x[[pollutant]]), ]$ID)
}
f <- function(x) {
mean(x[[pollutant]], na.rm = TRUE)
}
obs <- sapply(dataset, c)
means <- sapply(dataset, f)
obs <- obs[obs != 0]
means <- means[!is.na(means)]
sumproduct <- sum(means * obs)
sumsum <- sum(obs)
sumproduct / sumsum
pollutantmean('specdata', 'nitrate', 70:72)
pollutantmean('specdata', 'nitrate', 70:72)
source('pollutantmean.R')
pollutantmean('specdata', 'nitrate', 70:72)
pollutantmean('specdata', 'sulfate', 34)
pollutantmean('specdata', 'sulfate', 1:10)
pollutantmean('specdata', 'nitrate')
set.seed(42)
cc <- complete("specdata", 332:1)
source('complete.R')
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, 'nobs'])
source('corr.R')
cr <- corr('specdata')
to_check <- complete('specdata')
source('corr.R')
cr <- corr('specdata')
source('corr.R')
cr <- corr('specdata')
to_check <- complete(directory)
to_check <- complete('specdata')
to_check[to_check$nobs > threshold, ]$id
to_check[to_check$nobs > 0, ]$id
to_check[to_check$nobs > 190, ]$id
to_check[to_check$nobs > 900, ]$id
source('corr.R')
cr <- corr('specdata')
source('corr.R')
cr <- corr('specdata')
source('corr.R')
cr <- corr('specdata')
cr <- sort(cr)
cr <- corr('specdata')
id <- 1:332
directory <- 'specdata'
dataset <- lapply(to_check, function(x) {read.csv(file=file.path(directory, paste(sprintf("%03.f", x), "csv", sep='.')), header=TRUE)})
to_check <- complete(directory)
to_check <- to_check[to_check$nobs > threshold, ]$id
threshold <- 100
to_check <- to_check[to_check$nobs > threshold, ]$id
dataset <- lapply(to_check, function(x) {read.csv(file=file.path(directory, paste(sprintf("%03.f", x), "csv", sep='.')), header=TRUE)})
fun <- function(x) {
cor(x$sulfate, x$nitrate)
}
sapply(dataset, fun)
dataset[1]
cor(dataset[1]$sulfate, dataset[1]$nitrate)
cor(x=dataset[1]$sulfate, y=dataset[1]$nitrate)
dataset[1]$nitrate
dataset[[1]]$nitrate
cor(dataset[[1]]$sulfate, dataset[[1]]$nitrate)
?cor(dataset[[1]]$sulfate, dataset[[1]]$nitrate)
source('corr.R')
cr <- corr('specdata', 150)
source('corr.R')
cr <- corr('specdata', 150)
head(cr)
summary(cr)
cr <- corr('specdata', 400)
head(cr)
summary(cr)
cr <- corr('specdata', 5000)
summary(cr)
cr <- corr('specdata')
summary(cr)
length(cr)
cr <- corr('specdata')
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print (out)
cr <- corr('specdata', 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr('specdata', 2000)
n <- length(cr)
cr <- corr('specdata', 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
log(-1)
printmessage <- function(x) {
if(x > 0) {
print ("X is positive")
} else {
print ("x is negative")
}
}
printmessage(4)
printmessage(NA)
library(swirl)
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
lapply(flags, unique)
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
q()
?iris
sapply(iris$Sepal.Length, mean)
mean(iris$Sepal.Length)
tapply(iris$Sepal.Length, iris$Species, mean)
apply(iris[, 1:4], 1, mean)
apply(iris, 1, mean)
apply(iris, 3, mean)
apply(iris, 2, mean)
colMeans(iris)
rowMeans(iris[, 1:4])
iris
apply(iris[, 1:4], 1, mean)
iris[, 1:4]
apply(iris[, 1:4], 2, mean)
?mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
apply(mtcars, 2, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)
hp <- sapply(split(mtcars$hp, mtcars$cyl), mean)
hp
hp$4
hp[4]
hp[[4]]
hp[1]
hp["4"]
hp["4"] - hp["8"]
debug(ls)
ls()
function (name, pos = -1L, envir = as.environment(pos), all.names = FALSE,
pattern, sorted = TRUE)
{
if (!missing(name)) {
pos <- tryCatch(name, error = function(e) e)
if (inherits(pos, "error")) {
name <- substitute(name)
if (!is.character(name))
name <- deparse(name)
warning(gettextf("%s converted to character string",
warning(gettextf("%s converted to character string",
warning(gettextf("%s converted to character string",
ls()
undebug(ls)
undebug(ls)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
makeVector(10)
cachemean(makeVector())
cachemean(makeVector(10))
cachemean(makeVector(1:10))
cachemean(makeVector(1:10))
cachemean()
mt <- makeVector(21:31)
cachemean(mt)
cachemean(mt)
setwd('f:\\datasciencecoursera\\ProgrammingAssignment2')
ls
ls()
source('cachematrix.R')
mym <- makeCacheMatrix(matrix(1:10, 2, 5))
cacheSolve(mym)
cacheSolve(mym)
mym <- makeCacheMatrix(matrix(1:4, 2, 2))
cacheSolve(mym)
matrix(1:4, 2, 2)
m <- matrix(1:4, 2, 2)
solve(m)
mym <- makeCacheMatrix(m)
cacheSolve(mym)
source('cachematrix.R')
m <- matrix(1:4, 2, 2)
solve(m)
mym <- makeCacheMatrix(m)
cacheSolve(mym)
debug(cacheSolve)
cacheSolve(mym)
undebug(cacheSolve)
cacheSolve(mym)
source('cachematrix.R')
mym <- makeCacheMatrix(m)
cacheSolve(mym)
cacheSolve(mym)
str (cacheSolve)
str (makeCacheMatrix)
x  <- c(1:42)
str(x)
str(str)
